---
- name: Detect if deployment is SNO
  ansible.builtin.include_tasks: detect_sno.yml

- name: Ensure master MCP has required role label (SNO case)
  kubernetes.core.k8s:
    kind: MachineConfigPool
    name: master
    state: patched
    definition:
      metadata:
        labels:
          machineconfiguration.openshift.io/role: master
  when: is_sno

- name: Debug - Applied master MCP role label for SNO
  ansible.builtin.debug:
    msg: "Applied machineconfiguration.openshift.io/role=master label to master MCP for SNO deployment"
  when: is_sno

- name: Apply CNF label to worker0 node (multinode case)
  kubernetes.core.k8s:
    kind: Node
    name: "{{ worker_nodes_info.resources[0].metadata.name }}"
    state: patched
    definition:
      metadata:
        labels:
          node-role.kubernetes.io/worker-cnf: ''
  when: not is_sno and worker_nodes_info.resources | length > 0

- name: Render Machine config pool (multinode only)
  ansible.builtin.set_fact:
    machine_config_pool: "{{ lookup('template', 'machineConfigPool.yml.j2') }}"
  when: not is_sno

- name: Save Machine config pool (multinode only)
  ansible.builtin.copy:
    dest: "{{ artifacts_folder }}/machineConfigPool.yml"
    content: "{{ machine_config_pool }}"
    mode: '775'
  delegate_to: localhost
  when: not is_sno

- name: Apply MCP configuration (multinode only)
  kubernetes.core.k8s:
    state: present
    definition: "{{ machine_config_pool }}"
  vars:
    mcp_pool_name:
      - "worker-cnf"
  notify:
    - Wait for MCP
  when: not is_sno
